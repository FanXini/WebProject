<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- 以前项目中的配置，注意需要添加Spring Data Redis等jar包 -->
	<description>redis配置</description>

	<!-- 连接池基本参数配置，类似数据库连接池 -->
	<context:property-placeholder location="classpath:redis.properties"
		ignore-unresolvable="true" />

	<!-- redis连接池 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
	</bean>

	<!-- 连接池配置，类似数据库连接池 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.master.host}"></property>
		<property name="port" value="${redis.master.port}"></property>
		<property name="password" value="${redis.master.password}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>

	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean id="jackson2JsonRedisSerializer"
		class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
	<bean id="jdkSerializationRedisSerializer"
		class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />


	<bean id="redisTemplate" name="redisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="jdkSerializationRedisSerializer" />
		<property name="hashKeySerializer" ref="jdkSerializationRedisSerializer" />
		<property name="hashValueSerializer" ref="jdkSerializationRedisSerializer" />
		<!-- <property name="enableTransactionSupport" value="true"/> -->
	</bean>

	<bean id="jdkredisTemplate" name="jdkredisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="jdkSerializationRedisSerializer" />
		<property name="valueSerializer" ref="jdkSerializationRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="hashValueSerializer" ref="jackson2JsonRedisSerializer" />
	</bean>
	<bean id="jacksonredisTemplate" name="jacksonredisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="jackson2JsonRedisSerializer" />
		<property name="valueSerializer" ref="jackson2JsonRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="hashValueSerializer" ref="jackson2JsonRedisSerializer" />
	</bean>

	<!--redis cache -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
		c:redisOperations-ref="redisTemplate">
		<!-- 默认缓存10分钟 -->
		<property name="defaultExpiration" value="600" />
		<property name="usePrefix" value="true" />
		<!--cacheName 缓存超时配置，半小时，一小时，一天 -->
		<property name="expires">
			<map key-type="java.lang.String" value-type="java.lang.Long">
				<entry key="halfHour" value="1800" />
				<entry key="hour" value="3600" />
				<entry key="oneDay" value="86400" />
				<!--shiro cache keys -->
				<entry key="authorizationCache" value="1800" />
				<entry key="authenticationCache" value="1800" />
				<entry key="activeSessionCache" value="1800" />
			</map>
		</property>
	</bean>

	<!-- spring cache -->
	<!-- <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager"> 
		<property name="caches"> <set> <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" 
		p:name="default" /> <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" 
		p:name="accountCache" /> </set> </property> </bean> -->


	<!-- cache注解，和spring-ehcache.xml中的只能使用一个 -->
	<cache:annotation-driven cache-manager="cacheManager"
		proxy-target-class="true" />




</beans>
